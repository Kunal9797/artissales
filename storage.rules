rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Documents folder - public read, manager write (via Cloud Function)
    match /documents/{documentId} {
      // Only authenticated users can read documents
      // SECURITY FIX: Changed from public read (if true) to require authentication
      allow read: if request.auth != null;

      // Only allow writes from Cloud Functions (not directly from clients)
      // The Cloud Function will handle permission checks
      allow write: if false;
    }

    // Visits photos - users can upload/read their own visit photos
    match /visits/{userId}/{photoId} {
      // Users can only read/write their own photos
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Expense photos - users can upload/read their own expense photos
    match /expenses/{userId}/{photoId} {
      // Users can only read/write their own photos
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Profile photos - users can upload/read their own profile photo
    match /profilePhotos/{userId}/{photoId} {
      // Users can only read/write their own profile photo
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Default: deny all access to other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
